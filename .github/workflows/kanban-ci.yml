name: Kanban CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 23
      uses: actions/setup-java@v4
      with:
        java-version: '23'
        distribution: 'oracle'
        cache: maven

    - name: Set executable permissions for mvnw
      run: chmod +x backend/mvnw

    - name: Create .env file
      run: |
        cd backend
        echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/${{ secrets.POSTGRES_DB }}" >> .env
        echo "SPRING_DATASOURCE_USERNAME=${{ secrets.POSTGRES_USER }}" >> .env
        echo "SPRING_DATASOURCE_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
        
    - name: Build and test backend
      run: |
        cd backend
        ./mvnw clean test jacoco:report
        
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: test-coverage
        path: backend/target/site/jacoco

  frontend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: npm
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: cd frontend && npm ci --legacy-peer-deps
      
    - name: Build frontend
      run: cd frontend && npm run build
      
    - name: Run linting
      run: cd frontend && npm run lint
      continue-on-error: true

    - name: Run tests with coverage
      run: cd frontend && npm run test:coverage
      
    - name: Upload test coverage
      uses: actions/upload-artifact@v4
      with:
        name: frontend-test-coverage
        path: frontend/coverage